
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTR pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n                    | AND type_qualifier_list_opt\n                    | AND type_qualifier_list_opt pointer\n         enum_specifier : ENUM ID COLON declaration_specifiers brace_open enumerator_list brace_close\n                           | ENUM TYPEID COLON declaration_specifiers brace_open enumerator_list brace_close\n        abstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[6,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,6,-100,-115,-110,-71,-99,-116,6,-219,-113,-117,6,-69,-122,6,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,6,-59,6,-88,6,6,-67,-137,-305,-136,6,-153,-152,-164,-94,-96,6,-93,-95,-98,-87,-90,-92,-75,-36,6,6,-76,6,-89,6,6,-134,-146,-143,6,6,6,6,6,-165,6,6,-42,-41,6,6,-79,-82,-78,-80,6,-84,-197,-196,-83,-198,-81,6,6,-135,-138,-144,-306,-132,-133,6,6,-154,-77,6,-37,6,6,6,-40,6,6,6,-216,-215,6,-213,-199,-212,-200,-140,-139,-145,-156,-155,6,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'LBRACKET':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,40,42,45,46,49,51,52,55,62,70,71,72,74,75,77,78,79,80,81,84,86,89,92,93,97,102,107,115,117,127,140,141,144,151,152,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,189,190,191,194,195,198,201,231,235,236,238,239,245,252,254,263,279,282,283,285,289,296,299,322,327,328,357,358,364,366,373,374,377,382,386,387,388,389,392,397,400,401,421,422,423,424,430,431,451,452,456,458,460,463,464,470,476,477,478,479,480,488,489,490,491,492,497,498,501,502,512,515,516,517,518,523,525,530,],[-108,-121,-119,-105,-103,60,-101,-120,-102,-106,-97,-100,-115,-110,-99,-116,-219,-113,-307,-117,-122,-35,-307,-111,-107,-118,-112,-114,-109,-123,-104,60,-137,-305,-136,-153,-152,-34,-1,-164,-33,-94,-96,145,-43,-93,-95,-98,-3,-36,200,-292,-134,-165,-2,145,-4,-296,-284,-299,-303,-300,-297,-282,-283,287,-295,-269,-301,-293,-281,-298,-294,-42,-41,200,200,329,-51,333,-292,-135,-138,-306,-132,-133,-154,-44,379,-304,-302,-278,-277,-37,-40,200,200,329,333,-140,-139,-156,-155,-50,-49,-181,379,-276,-275,-274,-273,-272,-285,200,200,-39,-38,-195,-189,-191,-193,-45,-48,-184,379,-182,-270,-271,379,-57,-56,-190,-192,-194,-6,-5,-47,-46,-183,514,-287,-52,-55,-286,379,-279,-54,-53,-288,-280,-289,]),'WCHAR_CONST':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,158,-34,-307,158,-165,-307,158,158,-268,158,-266,158,-265,158,-264,158,158,-263,-267,158,158,158,-79,-82,-78,158,-80,158,158,-84,-197,-196,-83,-198,158,-81,-264,-306,158,158,158,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,158,-231,-232,-224,-230,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-307,-264,158,-216,-215,158,-213,158,158,158,-199,158,-212,-200,158,158,158,-264,158,158,-18,158,158,-17,158,158,-34,-307,-264,-211,-214,158,-203,158,-201,-307,-180,158,158,-307,158,-264,158,158,158,158,-202,158,158,158,158,-17,158,-207,-206,-204,158,-307,158,158,158,-208,-205,158,-210,-209,]),'FLOAT_CONST':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,159,-34,-307,159,-165,-307,159,159,-268,159,-266,159,-265,159,-264,159,159,-263,-267,159,159,159,-79,-82,-78,159,-80,159,159,-84,-197,-196,-83,-198,159,-81,-264,-306,159,159,159,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,159,-231,-232,-224,-230,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-307,-264,159,-216,-215,159,-213,159,159,159,-199,159,-212,-200,159,159,159,-264,159,159,-18,159,159,-17,159,159,-34,-307,-264,-211,-214,159,-203,159,-201,-307,-180,159,159,-307,159,-264,159,159,159,159,-202,159,159,159,159,-17,159,-207,-206,-204,159,-307,159,159,159,-208,-205,159,-210,-209,]),'MINUS':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,117,123,140,145,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,231,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,287,288,291,292,293,294,295,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,386,387,388,389,392,397,398,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,425,426,427,433,435,436,438,440,442,445,458,461,462,463,464,465,467,469,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,512,514,515,516,519,522,525,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,162,-34,-307,-292,162,-165,-307,162,162,-296,-268,-255,-284,-299,-303,-300,-297,-282,162,-266,-283,-257,-236,162,-265,162,-295,-264,-269,162,162,-301,-263,-293,-281,304,-298,-294,-267,162,162,162,-79,-82,-78,162,-80,162,162,-84,-197,-196,-83,-198,162,-81,-264,-292,-306,162,162,162,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,162,-231,-232,-224,-230,-304,162,-261,-302,-278,-277,162,162,162,-255,-260,162,-258,-259,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-307,-264,162,-216,-215,162,-213,162,162,162,-199,162,-212,-200,162,162,162,-264,162,162,-18,162,162,-17,-276,-275,-274,-273,-272,-285,162,304,304,304,-241,304,304,304,-240,304,304,-238,-237,304,304,304,304,304,-239,162,-34,-307,-264,-211,-214,162,-203,162,-201,-307,-180,-262,-270,-271,162,162,-256,-307,162,-264,162,162,162,162,-202,162,162,162,162,-17,162,-207,-206,-204,-286,162,-307,-279,162,162,-280,162,-208,-205,162,-210,-209,]),'RPAREN':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,40,42,45,46,49,51,52,55,59,61,62,70,72,74,75,77,78,79,80,81,84,86,89,92,93,97,102,107,111,112,113,114,115,116,117,118,120,127,140,141,142,144,146,151,152,154,155,156,157,158,159,160,163,164,166,172,174,177,179,180,181,182,183,185,189,190,191,192,193,194,195,196,197,198,199,201,213,229,235,236,238,239,245,252,254,259,260,279,281,282,283,285,288,289,292,293,295,296,297,298,299,300,322,323,324,325,326,327,328,330,334,335,336,337,350,357,358,364,366,373,374,384,385,386,387,388,389,391,392,393,395,396,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,428,429,430,431,434,439,441,443,446,451,452,462,463,464,469,476,477,478,479,480,488,489,490,491,496,497,498,500,501,502,506,509,512,516,517,518,519,520,523,525,526,530,],[-108,-121,-119,-105,-103,-58,-101,-120,-102,-106,-97,-100,-115,-110,-99,-116,-219,-113,-307,-117,-122,-35,-307,-111,-107,-118,-112,-114,-109,-123,-104,107,-307,-59,-137,-136,-153,-152,-34,-1,-164,-33,-94,-96,-60,-43,-93,-95,-98,-3,-36,189,-23,190,-168,-307,-24,-292,-166,-173,-134,-165,-2,254,-61,-307,-4,-296,-255,-284,-299,-303,-300,-297,-282,-283,-257,-236,-295,-269,-301,-293,-281,-234,-298,-294,-220,-42,-41,-307,-172,-8,-186,-62,-170,-7,-51,-171,-188,-20,-217,-135,-138,-306,-132,-133,-154,-44,373,374,-304,-261,-302,-278,-277,392,-37,-255,-260,-258,-40,397,398,-307,-259,-186,-29,-30,423,424,-63,-187,-307,-307,-174,-169,-167,-19,-140,-139,-156,-155,-50,-49,-221,462,-276,-275,-274,-273,-290,-272,464,467,468,-285,-185,-186,-307,-242,-254,-243,-241,-245,-249,-244,-240,-247,-252,-238,-237,-246,-253,-248,-250,-251,-239,-39,-38,-195,-189,476,477,-191,-193,480,-218,483,485,487,-45,-48,-262,-270,-271,-256,-57,-56,-190,-192,-194,-6,-5,-47,-46,-291,512,-287,-235,-52,-55,-307,521,-286,-279,-54,-53,-307,527,-288,-280,531,-289,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[21,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,21,-100,-115,-110,-71,-99,-116,21,-219,-113,-117,21,-69,-122,21,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,21,-59,21,-88,21,21,-67,-137,-305,-136,21,-153,-152,-164,-94,-96,21,-93,-95,-98,-87,-90,-92,-75,-36,21,21,-76,21,-89,21,21,-134,-146,-143,21,21,21,21,21,-165,21,21,-42,-41,21,21,-79,-82,-78,-80,21,-84,-197,-196,-83,-198,-81,21,21,-135,-138,-144,-306,-132,-133,21,21,-154,-77,21,-37,21,21,21,-40,21,21,21,-216,-215,21,-213,-199,-212,-200,-140,-139,-145,-156,-155,21,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'PLUS':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,117,123,140,145,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,231,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,287,288,291,292,293,294,295,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,386,387,388,389,392,397,398,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,425,426,427,433,435,436,438,440,442,445,458,461,462,463,464,465,467,469,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,512,514,515,516,519,522,525,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,169,-34,-307,-292,169,-165,-307,169,169,-296,-268,-255,-284,-299,-303,-300,-297,-282,169,-266,-283,-257,-236,169,-265,169,-295,-264,-269,169,169,-301,-263,-293,-281,308,-298,-294,-267,169,169,169,-79,-82,-78,169,-80,169,169,-84,-197,-196,-83,-198,169,-81,-264,-292,-306,169,169,169,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,169,-231,-232,-224,-230,-304,169,-261,-302,-278,-277,169,169,169,-255,-260,169,-258,-259,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-307,-264,169,-216,-215,169,-213,169,169,169,-199,169,-212,-200,169,169,169,-264,169,169,-18,169,169,-17,-276,-275,-274,-273,-272,-285,169,308,308,308,-241,308,308,308,-240,308,308,-238,-237,308,308,308,308,308,-239,169,-34,-307,-264,-211,-214,169,-203,169,-201,-307,-180,-262,-270,-271,169,169,-256,-307,169,-264,169,169,169,169,-202,169,169,169,169,-17,169,-207,-206,-204,-286,169,-307,-279,169,169,-280,169,-208,-205,169,-210,-209,]),'ELLIPSIS':([203,],[337,]),'GT':([117,152,154,155,156,157,158,159,160,163,164,166,172,174,177,179,180,181,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,462,463,464,469,512,516,525,],[-292,-296,-255,-284,-299,-303,-300,-297,-282,-283,-257,-236,-295,-269,-301,-293,-281,309,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-242,309,-243,-241,-245,309,-244,-240,-247,309,-238,-237,-246,309,309,309,309,-239,-262,-270,-271,-256,-286,-279,-280,]),'GOTO':([54,71,103,106,123,204,205,208,210,217,219,220,221,222,224,226,227,238,339,340,343,345,349,352,354,355,435,436,440,442,445,483,484,485,487,507,508,510,522,527,528,529,531,532,533,],[-74,-305,-87,-75,206,-79,-82,-78,-80,206,-84,-197,-196,-83,-198,206,-81,-306,-216,-215,-213,206,-199,-212,-200,206,-211,-214,-203,206,-201,206,-202,206,206,-207,-206,-204,206,206,-208,-205,206,-210,-209,]),'ENUM':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,41,43,48,50,52,54,55,56,57,58,61,62,65,66,68,69,71,73,79,88,103,104,105,106,107,119,122,123,124,125,126,128,129,130,131,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,237,238,261,280,289,290,291,294,296,330,334,339,340,342,343,349,352,354,361,401,421,422,435,436,440,445,484,507,508,510,528,529,532,533,],[28,-307,-121,-103,-58,-101,-102,-70,-66,-72,28,-100,-71,-99,28,-69,-122,28,-35,-68,-73,-307,-307,-123,-74,-104,-91,-16,-15,28,-59,-88,28,28,-67,-305,28,-164,28,-87,-90,-92,-75,-36,28,-76,28,-89,28,28,-146,-143,28,28,28,28,-165,28,28,-42,-41,28,28,-79,-82,-78,-80,28,-84,-197,-196,-83,-198,-81,28,28,-144,-306,-77,28,-37,28,28,28,-40,28,28,-216,-215,28,-213,-199,-212,-200,-145,28,-39,-38,-211,-214,-203,-201,-202,-207,-206,-204,-208,-205,-210,-209,]),'PERIOD':([71,117,152,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,231,238,263,279,282,283,285,377,382,386,387,388,389,392,397,456,458,460,463,464,470,492,497,498,512,515,516,523,525,530,],[-305,-292,-296,-284,-299,-303,-300,-297,-282,-283,286,-295,-269,-301,-293,-281,-298,-294,-292,-306,378,-304,-302,-278,-277,-181,378,-276,-275,-274,-273,-272,-285,-184,378,-182,-270,-271,378,-183,513,-287,-286,378,-279,-288,-280,-289,]),'GE':([117,152,154,155,156,157,158,159,160,163,164,166,172,174,177,179,180,181,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,462,463,464,469,512,516,525,],[-292,-296,-255,-284,-299,-303,-300,-297,-282,-283,-257,-236,-295,-269,-301,-293,-281,313,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-242,313,-243,-241,-245,313,-244,-240,-247,313,-238,-237,-246,313,313,313,313,-239,-262,-270,-271,-256,-286,-279,-280,]),'INT_CONST_DEC':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,179,-34,-307,179,-165,-307,179,179,-268,179,-266,179,-265,179,-264,179,179,-263,-267,179,179,179,-79,-82,-78,179,-80,179,179,-84,-197,-196,-83,-198,179,-81,-264,-306,179,179,179,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,179,-231,-232,-224,-230,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-307,-264,179,-216,-215,179,-213,179,179,179,-199,179,-212,-200,179,179,179,-264,179,179,-18,179,179,-17,179,179,-34,-307,-264,-211,-214,179,-203,179,-201,-307,-180,179,179,-307,179,-264,179,179,179,179,-202,179,179,179,179,-17,179,-207,-206,-204,179,-307,179,179,179,-208,-205,179,-210,-209,]),'ARROW':([117,152,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,231,238,279,282,283,285,386,387,388,389,392,397,463,464,512,516,525,],[-292,-296,-284,-299,-303,-300,-297,-282,-283,284,-295,-269,-301,-293,-281,-298,-294,-292,-306,-304,-302,-278,-277,-276,-275,-274,-273,-272,-285,-270,-271,-286,-279,-280,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[42,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,42,-100,-115,-110,-71,-99,-116,42,-219,-113,-117,42,-69,-122,42,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,42,-59,42,-88,42,42,-67,-137,-305,-136,42,-153,-152,-164,-94,-96,42,-93,-95,-98,-87,-90,-92,-75,-36,42,42,-76,42,-89,42,42,-134,-146,-143,42,42,42,42,42,-165,42,42,-42,-41,42,42,-79,-82,-78,-80,42,-84,-197,-196,-83,-198,-81,42,42,-135,-138,-144,-306,-132,-133,42,42,-154,-77,42,-37,42,42,42,-40,42,42,42,-216,-215,42,-213,-199,-212,-200,-140,-139,-145,-156,-155,42,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'HEX_FLOAT_CONST':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,182,-34,-307,182,-165,-307,182,182,-268,182,-266,182,-265,182,-264,182,182,-263,-267,182,182,182,-79,-82,-78,182,-80,182,182,-84,-197,-196,-83,-198,182,-81,-264,-306,182,182,182,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,182,-231,-232,-224,-230,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-307,-264,182,-216,-215,182,-213,182,182,182,-199,182,-212,-200,182,182,182,-264,182,182,-18,182,182,-17,182,182,-34,-307,-264,-211,-214,182,-203,182,-201,-307,-180,182,182,-307,182,-264,182,182,182,182,-202,182,182,182,182,-17,182,-207,-206,-204,182,-307,182,182,182,-208,-205,182,-210,-209,]),'DOUBLE':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[46,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,46,-100,-115,-110,-71,-99,-116,46,-219,-113,-117,46,-69,-122,46,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,46,-59,46,-88,46,46,-67,-137,-305,-136,46,-153,-152,-164,-94,-96,46,-93,-95,-98,-87,-90,-92,-75,-36,46,46,-76,46,-89,46,46,-134,-146,-143,46,46,46,46,46,-165,46,46,-42,-41,46,46,-79,-82,-78,-80,46,-84,-197,-196,-83,-198,-81,46,46,-135,-138,-144,-306,-132,-133,46,46,-154,-77,46,-37,46,46,46,-40,46,46,46,-216,-215,46,-213,-199,-212,-200,-140,-139,-145,-156,-155,46,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'MINUSEQUAL':([117,152,154,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,462,463,464,469,512,516,525,],[-292,-296,268,-284,-299,-303,-300,-297,-282,-283,-257,-295,-269,-301,-293,-281,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-262,-270,-271,-256,-286,-279,-280,]),'INT_CONST_OCT':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,183,-34,-307,183,-165,-307,183,183,-268,183,-266,183,-265,183,-264,183,183,-263,-267,183,183,183,-79,-82,-78,183,-80,183,183,-84,-197,-196,-83,-198,183,-81,-264,-306,183,183,183,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,183,-231,-232,-224,-230,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-307,-264,183,-216,-215,183,-213,183,183,183,-199,183,-212,-200,183,183,183,-264,183,183,-18,183,183,-17,183,183,-34,-307,-264,-211,-214,183,-203,183,-201,-307,-180,183,183,-307,183,-264,183,183,183,183,-202,183,183,183,183,-17,183,-207,-206,-204,183,-307,183,183,183,-208,-205,183,-210,-209,]),'TIMESEQUAL':([117,152,154,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,462,463,464,469,512,516,525,],[-292,-296,277,-284,-299,-303,-300,-297,-282,-283,-257,-295,-269,-301,-293,-281,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-262,-270,-271,-256,-286,-279,-280,]),'OR':([117,152,154,155,156,157,158,159,160,163,164,166,172,174,177,179,180,181,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,462,463,464,469,512,516,525,],[-292,-296,-255,-284,-299,-303,-300,-297,-282,-283,-257,-236,-295,-269,-301,-293,-281,318,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-242,318,-243,-241,-245,-249,-244,-240,-247,-252,-238,-237,-246,318,-248,-250,-251,-239,-262,-270,-271,-256,-286,-279,-280,]),'SHORT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[2,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,2,-100,-115,-110,-71,-99,-116,2,-219,-113,-117,2,-69,-122,2,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,2,-59,2,-88,2,2,-67,-137,-305,-136,2,-153,-152,-164,-94,-96,2,-93,-95,-98,-87,-90,-92,-75,-36,2,2,-76,2,-89,2,2,-134,-146,-143,2,2,2,2,2,-165,2,2,-42,-41,2,2,-79,-82,-78,-80,2,-84,-197,-196,-83,-198,-81,2,2,-135,-138,-144,-306,-132,-133,2,2,-154,-77,2,-37,2,2,2,-40,2,2,2,-216,-215,2,-213,-199,-212,-200,-140,-139,-145,-156,-155,2,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'RETURN':([54,71,103,106,123,204,205,208,210,217,219,220,221,222,224,226,227,238,339,340,343,345,349,352,354,355,435,436,440,442,445,483,484,485,487,507,508,510,522,527,528,529,531,532,533,],[-74,-305,-87,-75,209,-79,-82,-78,-80,209,-84,-197,-196,-83,-198,209,-81,-306,-216,-215,-213,209,-199,-212,-200,209,-211,-214,-203,209,-201,209,-202,209,209,-207,-206,-204,209,209,-208,-205,209,-210,-209,]),'RSHIFTEQUAL':([117,152,154,155,156,157,158,159,160,163,164,172,174,177,179,180,182,183,231,238,279,281,282,283,285,292,293,295,300,386,387,388,389,392,397,462,463,464,469,512,516,525,],[-292,-296,278,-284,-299,-303,-300,-297,-282,-283,-257,-295,-269,-301,-293,-281,-298,-294,-292,-306,-304,-261,-302,-278,-277,-255,-260,-258,-259,-276,-275,-274,-273,-272,-285,-262,-270,-271,-256,-286,-279,-280,]),'RESTRICT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,37,39,40,41,42,43,45,46,48,49,50,51,52,54,55,60,61,62,64,65,68,69,70,71,72,73,74,75,77,79,81,84,88,92,93,97,103,106,107,109,110,115,122,123,124,125,126,127,128,129,130,131,132,133,135,140,145,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,257,258,261,280,289,290,291,294,296,299,329,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,426,427,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[35,35,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,35,-100,-115,-110,-71,-99,-116,35,-219,-113,35,-117,35,-69,-122,-35,35,-111,-68,-107,-73,-118,-112,35,-114,35,-109,-123,-74,-104,35,35,-59,35,-88,35,-67,-137,-305,-136,35,-153,-152,35,-164,-94,-96,35,-93,-95,-98,-87,-75,-36,35,35,35,-76,35,-89,35,35,-134,-146,-143,35,35,35,35,35,-165,35,35,35,-42,-41,35,35,-79,-82,-78,-80,35,-84,-197,-196,-83,-198,-81,35,35,-135,-138,-144,-306,-132,-133,35,35,-154,35,35,-77,35,-37,35,35,35,-40,35,35,35,35,-216,-215,35,-213,-199,-212,-200,-140,-139,-145,-156,-155,35,-39,-38,35,35,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,40,41,42,43,45,46,48,49,50,51,52,54,55,60,61,62,64,65,68,69,70,71,72,74,75,79,81,84,88,92,93,97,103,106,107,109,115,122,123,124,133,135,140,145,146,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,236,238,247,249,252,257,261,289,296,329,330,334,339,340,342,343,349,352,354,357,358,364,366,401,421,422,426,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[9,9,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,9,-100,-115,-110,-71,-99,-116,9,-219,-113,-117,9,-69,-122,-35,-111,-68,-107,-73,-118,-112,9,-114,9,-109,-123,-74,-104,110,9,-59,9,-88,9,-67,-137,-305,-136,-153,-152,-164,-94,-96,9,-93,-95,-98,-87,-75,-36,187,9,-76,9,-89,9,9,-165,258,9,-42,-41,9,9,-79,-82,-78,-80,9,-84,-197,-196,-83,-198,-81,-138,-306,9,9,-154,371,-77,-37,-40,427,9,9,-216,-215,9,-213,-199,-212,-200,-140,-139,-156,-155,9,-39,-38,474,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'SIZEOF':([3,35,52,54,60,71,77,79,80,103,106,108,109,110,123,140,145,148,149,153,161,162,168,169,171,173,175,176,178,186,187,188,200,204,205,208,209,210,216,217,219,220,221,222,224,226,227,230,238,240,253,256,257,258,263,267,268,269,270,271,272,273,274,275,276,277,278,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,329,332,333,339,340,342,343,344,345,346,349,351,352,354,355,356,362,370,371,372,375,379,381,383,398,425,426,427,433,435,436,438,440,442,445,458,461,465,467,470,471,473,474,475,481,483,484,485,486,487,493,494,506,507,508,510,514,515,519,522,527,528,529,531,532,533,],[-121,-122,-123,-74,-307,-305,-34,-164,-33,-87,-75,161,-34,-307,161,-165,-307,161,161,-268,161,-266,161,-265,161,-264,161,161,-263,-267,161,161,161,-79,-82,-78,161,-80,161,161,-84,-197,-196,-83,-198,161,-81,-264,-306,161,161,161,-34,-307,-307,-225,-228,-226,-222,-223,-227,-229,161,-231,-232,-224,-230,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-307,-264,161,-216,-215,161,-213,161,161,161,-199,161,-212,-200,161,161,161,-264,161,161,-18,161,161,-17,161,161,-34,-307,-264,-211,-214,161,-203,161,-201,-307,-180,161,161,-307,161,-264,161,161,161,161,-202,161,161,161,161,-17,161,-207,-206,-204,161,-307,161,161,161,-208,-205,161,-210,-209,]),'UNSIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,40,41,42,43,45,46,48,49,50,51,52,54,55,56,57,58,61,62,64,65,66,68,69,70,71,72,73,74,75,79,81,84,88,92,93,97,103,104,105,106,107,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,235,236,237,238,239,245,247,249,252,261,280,289,290,291,294,296,299,330,334,339,340,342,343,349,352,354,357,358,361,364,366,401,421,422,435,436,440,445,484,488,489,507,508,510,528,529,532,533,],[20,-307,-108,-121,-119,-105,-103,-58,-101,-120,-102,-70,-66,-106,-97,-72,20,-100,-115,-110,-71,-99,-116,20,-219,-113,-117,20,-69,-122,20,-35,-111,-68,-107,-73,-118,-112,-307,-114,-307,-109,-123,-74,-104,-91,-16,-15,20,-59,20,-88,20,20,-67,-137,-305,-136,20,-153,-152,-164,-94,-96,20,-93,-95,-98,-87,-90,-92,-75,-36,20,20,-76,20,-89,20,20,-134,-146,-143,20,20,20,20,20,-165,20,20,-42,-41,20,20,-79,-82,-78,-80,20,-84,-197,-196,-83,-198,-81,20,20,-135,-138,-144,-306,-132,-133,20,20,-154,-77,20,-37,20,20,20,-40,20,20,20,-216,-215,20,-213,-199,-212,-200,-140,-139,-145,-156,-155,20,-39,-38,-211,-214,-203,-201,-202,-6,-5,-207,-206,-204,-208,-205,-210,-209,]),'UNION':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,41,43,48,50,52,54,55,56,57,58,61,62,65,66,68,69,71,73,79,88,103,104,105,106,107,119,122,123,124,125,126,128,129,130,131,133,135,140,146,175,189,190,191,203,204,205,208,210,217,219,220,221,222,224,227,233,234,237,238,261,280,289,290,291,294,296,330,334,339,340,342,343,349,352,354,361,401,421,422,435,436,440,445,484,507,508,510,528,529,532,533,],[22,-307,-121,-103,-58,-101,-102,-70,-66,-72,22,-100,-71,-99,22,-69,-122,22,-35,-68,-73,-307,-307,-123,-74,-104,-91,-16,-15,22,-59,-88,22,22,-67,-305,22,-164,22,-87,-90,-92,-75,-36,22,-76,22,-89,22,22,-146,-143,22,22,22,22,-165,22,22,-42,-41,22,22,-79,-82,-78,-80,22,-84,-197,-196,-83,-198,-81,22,22,-144,-306,-77,22,-37,22,22,22,-40,22,22,-216,-215,22,-213,-199,-212,-200,-145,22,-39,-38,-211,-214,-203,-201,-202,-207,-206,-204,-208,-205,-210,-209,]),'COLON':([2,3,5,6,8,10,15,20,21,25,29,30,32,35,37,40,42,45,46,49,51,52,62,70,72,74,75,86,87,89,107,117,121,127,132,144,152,154,155,156,157,158,159,160,163,164,166,172,174,177,179,180,181,182,183,185,189,190,214,229,231,235,236,238,239,245,246,252,254,279,281,282,283,285,289,292,293,295,296,300,347,348,357,358,360,364,366,373,374,384,386,387,388,389,392,397,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,439,451,452,462,463,464,469,488,489,490,491,500,512,516,525,],[-108,-121,-119,-105,-58,-120,-106,-115,-110,-116,-219,-113,-117,-122,-35,-111,-107,-118,-112,-114,-109,-123,-59,-137,-136,133,135,-60,-163,-43,-36,-292,-162,-134,240,-61,-296,-255,-284,-299,-303,-300,-297,-282,-283,-257,-236,-295,-269,-301,-293,-281,-234,-298,-294,-220,-42,-41,345,-217,355,-135,-138,-306,-132,-133,362,-154,-44,-304,-261,-302,-278,-277,-37,-255,-260,-258,-40,-259,442,-233,-140,-139,240,-156,-155,-50,-49,-221,-276,-275,-274,-273,-272,-285,-242,-254,-243,-241,-245,-249,-244,-240,-247,-252,-238,-237,-246,-253,-248,-250,471,-251,-239,-39,-38,-218,-45,-48,-262,-270,-271,-256,-6,-5,-47,-46,-235,-286,-279,-280,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[204,204,204,204,204,204,204,204,204,204,204,204,]),'struct_or_union_specifier':([0,18,26,36,61,66,68,73,88,119,123,125,126,130,131,133,135,146,175,191,203,217,233,234,280,290,291,294,330,334,342,401,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'init_declarator_list':([33,64,],[83,83,]),'init_declarator_list_opt':([33,64,],[91,91,]),'iteration_statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[205,205,205,205,205,205,205,205,205,205,205,205,]),'unified_string_literal':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'assignment_expression_opt':([108,200,256,333,425,],[165,331,369,432,472,]),'brace_open':([27,28,67,70,72,74,75,123,147,148,149,217,226,247,249,345,355,381,398,442,462,467,468,483,485,487,493,522,527,531,],[73,76,123,125,126,134,136,123,123,263,263,123,123,363,365,123,123,263,470,123,470,470,470,123,123,123,263,123,123,123,]),'enumerator':([76,134,136,251,363,365,],[137,137,137,367,137,137,]),'typeid_noparen_declarator':([115,],[199,]),'type_qualifier_list_opt':([31,39,60,110,145,258,329,427,],[78,102,108,188,256,372,425,475,]),'declaration_specifiers_no_type_opt':([1,48,50,],[56,104,105,]),'expression_opt':([123,217,226,342,345,355,438,442,481,483,485,487,506,519,522,527,531,],[207,207,207,437,207,207,482,207,505,207,207,207,520,526,207,207,207,]),'designation':([263,458,470,515,],[375,375,375,375,]),'parameter_list':([61,146,191,330,334,401,],[118,118,118,118,118,118,]),'labeled_statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[208,208,208,208,208,208,208,208,208,208,208,208,]),'abstract_declarator':([115,191,299,401,],[193,326,193,326,]),'translation_unit':([0,],[26,]),'init_declarator':([33,64,143,150,],[95,95,255,266,]),'direct_abstract_declarator':([115,191,194,299,322,400,401,],[201,201,328,201,328,328,201,]),'designator_list':([263,458,470,515,],[382,382,382,382,]),'identifier':([61,108,123,146,148,149,161,168,171,175,176,187,188,200,202,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,330,333,342,344,345,346,351,355,356,362,371,372,378,379,381,398,425,438,442,465,466,467,471,474,475,481,483,485,486,487,493,506,513,514,519,522,527,531,],[120,180,180,120,180,180,180,180,180,180,180,180,180,180,335,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,120,180,180,180,180,180,180,180,180,180,180,180,456,180,180,180,180,180,180,180,498,180,180,180,180,180,180,180,180,180,180,180,523,180,180,180,180,180,]),'offsetof_member_designator':([466,],[497,]),'unary_expression':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[154,154,154,154,281,292,295,154,300,154,154,154,154,292,154,154,292,292,154,154,154,154,154,154,154,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,154,292,292,154,154,154,154,154,154,154,154,292,154,154,292,154,292,154,154,154,154,292,292,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'abstract_declarator_opt':([115,299,],[192,399,]),'initializer':([148,149,381,493,],[262,265,459,511,]),'direct_id_declarator':([0,4,13,26,33,36,64,66,82,85,115,132,143,150,191,194,322,360,],[8,8,62,8,8,8,8,8,8,62,8,8,8,8,8,62,62,8,]),'struct_declaration_list':([73,125,126,],[131,233,234,]),'pp_directive':([0,26,],[12,12,]),'declaration_list':([18,88,],[68,68,]),'id_init_declarator':([36,66,],[96,96,]),'type_specifier':([0,18,26,36,61,66,68,73,88,119,123,125,126,130,131,133,135,146,175,191,203,217,233,234,280,290,291,294,330,334,342,401,],[16,16,16,97,16,97,16,127,16,97,16,127,127,235,127,16,16,16,127,16,16,16,127,127,127,127,127,127,16,16,16,16,]),'compound_statement':([67,123,147,217,226,345,355,442,483,485,487,522,527,531,],[122,210,261,210,210,210,210,210,210,210,210,210,210,210,]),'pointer':([0,4,26,33,36,64,66,78,82,102,115,132,143,150,191,299,360,401,],[13,13,13,85,13,85,13,141,85,151,194,85,85,85,322,400,85,400,]),'typeid_declarator':([33,64,82,132,143,150,360,],[87,87,142,87,87,87,87,]),'id_init_declarator_list':([36,66,],[99,99,]),'declarator':([33,64,132,143,150,360,],[90,90,246,90,90,246,]),'argument_expression_list':([288,],[393,]),'struct_declarator_list_opt':([132,],[243,]),'typedef_name':([0,18,26,36,61,66,68,73,88,119,123,125,126,130,131,133,135,146,175,191,203,217,233,234,280,290,291,294,330,334,342,401,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_type_list_opt':([191,334,401,],[325,434,325,]),'struct_declarator':([132,360,],[244,447,]),'type_qualifier':([0,1,18,26,31,33,39,48,50,60,61,64,68,73,77,88,109,110,115,123,125,126,130,131,132,133,135,145,146,175,191,203,217,233,234,247,249,257,258,280,290,291,294,299,329,330,334,342,401,426,427,],[48,48,48,48,79,92,79,48,48,79,48,92,48,79,140,48,140,79,92,48,79,79,140,79,245,48,48,79,48,79,48,48,48,79,79,92,92,140,79,79,79,79,79,245,79,48,48,48,48,140,79,]),'assignment_operator':([154,],[274,]),'expression':([123,175,209,217,226,280,287,291,294,317,342,345,346,351,355,356,438,442,481,483,485,486,487,506,514,519,522,527,531,],[213,297,341,213,213,297,390,297,297,418,213,213,441,443,213,446,213,213,213,213,213,509,213,213,524,213,213,213,213,]),'storage_class_specifier':([0,1,18,26,33,48,50,61,64,68,88,115,123,133,135,146,191,203,217,247,249,330,334,342,401,],[1,1,1,1,81,1,1,1,81,1,1,81,1,1,1,1,1,1,1,81,81,1,1,1,1,]),'unified_wstring_literal':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'translation_unit_or_empty':([0,],[44,]),'initializer_list_opt':([263,],[376,]),'brace_close':([131,138,228,233,234,248,250,376,449,450,458,499,515,],[236,252,354,357,358,364,366,455,488,489,495,516,525,]),'direct_typeid_declarator':([33,64,82,85,132,143,150,360,],[86,86,86,144,86,86,86,86,]),'external_declaration':([0,26,],[14,69,]),'type_name':([175,280,290,291,294,],[298,385,394,395,396,]),'block_item_list':([123,],[217,]),'pppragma_directive':([0,26,123,217,226,345,355,442,483,485,487,522,527,531,],[23,23,219,219,219,219,219,219,219,219,219,219,219,219,]),'statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[220,220,353,440,445,484,507,508,510,529,532,533,]),'cast_expression':([108,123,148,149,168,175,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[166,166,166,166,293,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,469,166,166,166,166,469,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'struct_declarator_list':([132,],[241,]),'empty':([0,1,18,31,33,36,39,48,50,60,61,64,66,88,108,110,115,123,132,145,146,191,200,217,226,256,258,263,299,329,330,333,334,342,345,355,401,425,427,438,442,458,470,481,483,485,487,506,515,519,522,527,531,],[53,58,63,80,94,101,80,58,58,80,112,94,101,63,184,80,197,225,242,80,112,323,184,350,350,184,80,383,197,80,112,184,323,350,350,350,323,184,80,350,350,494,494,350,350,350,350,350,494,350,350,350,350,]),'parameter_declaration':([61,146,191,203,330,334,401,],[114,114,114,336,114,114,114,]),'primary_expression':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'declaration':([0,18,26,68,88,123,217,342,],[34,65,34,124,65,221,221,438,]),'declaration_specifiers_no_type':([0,1,18,26,48,50,61,68,88,123,133,135,146,191,203,217,330,334,342,401,],[36,57,66,36,57,57,119,66,66,66,119,119,119,119,119,66,119,119,66,119,]),'jump_statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[222,222,222,222,222,222,222,222,222,222,222,222,]),'enumerator_list':([76,134,136,363,365,],[138,248,250,449,450,]),'block_item':([123,217,],[224,349,]),'constant_expression':([216,240,253,362,379,],[347,359,368,448,457,]),'identifier_list_opt':([61,146,330,],[111,259,428,]),'constant':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'type_specifier_no_typeid':([0,18,26,33,36,61,64,66,68,73,88,115,119,123,125,126,130,131,132,133,135,146,175,191,203,217,233,234,247,249,280,290,291,294,299,330,334,342,401,],[10,10,10,84,10,10,84,10,10,10,10,84,10,10,10,10,10,10,239,10,10,10,10,10,10,10,10,10,84,84,10,10,10,10,239,10,10,10,10,]),'struct_declaration':([73,125,126,131,233,234,],[129,129,129,237,237,237,]),'direct_typeid_noparen_declarator':([115,194,],[195,327,]),'id_declarator':([0,4,26,33,36,64,66,82,115,132,143,150,191,360,],[18,59,18,88,98,121,98,59,196,121,121,121,59,121,]),'selection_statement':([123,217,226,345,355,442,483,485,487,522,527,531,],[227,227,227,227,227,227,227,227,227,227,227,227,]),'postfix_expression':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'initializer_list':([263,470,],[380,499,]),'unary_operator':([108,123,148,149,161,168,171,175,176,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,398,425,438,442,465,467,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'struct_or_union':([0,18,26,36,61,66,68,73,88,119,123,125,126,130,131,133,135,146,175,191,203,217,233,234,280,290,291,294,330,334,342,401,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'block_item_list_opt':([123,],[228,]),'assignment_expression':([108,123,148,149,175,187,188,200,209,217,226,256,274,280,287,288,291,294,317,333,342,344,345,346,351,355,356,371,372,381,425,438,442,465,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[170,229,264,264,229,320,321,170,229,229,229,170,384,229,229,391,229,229,229,170,229,439,229,229,229,229,229,453,454,264,170,229,229,496,503,504,229,229,229,229,229,264,229,229,229,229,229,229,]),'designation_opt':([263,458,470,515,],[381,493,381,493,]),'parameter_type_list':([61,146,191,330,334,401,],[113,260,324,429,324,324,]),'type_qualifier_list':([31,39,60,73,110,125,126,131,145,175,233,234,258,280,290,291,294,329,427,],[77,77,109,130,77,130,130,130,257,130,130,130,77,130,130,130,130,426,77,]),'designator':([263,382,458,470,515,],[377,460,377,377,377,]),'id_init_declarator_list_opt':([36,66,],[100,100,]),'declaration_specifiers':([0,18,26,61,68,88,123,133,135,146,191,203,217,330,334,342,401,],[33,64,33,115,64,64,64,247,249,115,115,115,64,115,115,64,115,]),'identifier_list':([61,146,330,],[116,116,116,]),'declaration_list_opt':([18,88,],[67,147,]),'function_definition':([0,26,],[41,41,]),'binary_expression':([108,123,148,149,175,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,333,342,344,345,346,351,355,356,362,371,372,379,381,425,438,442,465,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,181,419,420,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'enum_specifier':([0,18,26,36,61,66,68,73,88,119,123,125,126,130,131,133,135,146,175,191,203,217,233,234,280,290,291,294,330,334,342,401,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'decl_body':([0,18,26,68,88,123,217,342,],[47,47,47,47,47,47,47,47,]),'function_specifier':([0,1,18,26,33,48,50,61,64,68,88,115,123,133,135,146,191,203,217,247,249,330,334,342,401,],[50,50,50,50,93,50,50,50,93,50,50,93,50,50,50,50,50,50,50,93,93,50,50,50,50,]),'specifier_qualifier_list':([73,125,126,131,175,233,234,280,290,291,294,],[132,132,132,132,299,132,132,299,299,299,299,]),'conditional_expression':([108,123,148,149,175,187,188,200,209,216,217,226,240,253,256,274,280,287,288,291,294,317,333,342,344,345,346,351,355,356,362,371,372,379,381,425,438,442,465,471,474,475,481,483,485,486,487,493,506,514,519,522,527,531,],[185,185,185,185,185,185,185,185,185,348,185,185,348,348,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,348,185,185,348,185,185,185,185,185,500,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','cpp_parser.py',22),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','cpp_parser.py',23),
  ('pointer -> AND type_qualifier_list_opt','pointer',2,'p_pointer','cpp_parser.py',24),
  ('pointer -> AND type_qualifier_list_opt pointer','pointer',3,'p_pointer','cpp_parser.py',25),
  ('enum_specifier -> ENUM ID COLON declaration_specifiers brace_open enumerator_list brace_close','enum_specifier',7,'p_enum_specifier_4','cpp_parser.py',31),
  ('enum_specifier -> ENUM TYPEID COLON declaration_specifiers brace_open enumerator_list brace_close','enum_specifier',7,'p_enum_specifier_4','cpp_parser.py',32),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',42),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',42),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',42),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',42),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',42),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',42),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',42),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',109),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',110),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',109),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',110),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',109),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',110),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',109),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',110),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',109),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',110),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',109),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',109),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',109),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',109),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',109),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',109),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
